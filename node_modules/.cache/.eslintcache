[{"/media/mobcoder/HDD 1TB1/vashuddha/src/index.js":"1","/media/mobcoder/HDD 1TB1/vashuddha/src/App.js":"2","/media/mobcoder/HDD 1TB1/vashuddha/src/reportWebVitals.js":"3","/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js":"4"},{"size":535,"mtime":1673432974524,"results":"5","hashOfConfig":"6"},{"size":277,"mtime":1675429112637,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1673432974524,"results":"8","hashOfConfig":"6"},{"size":1847,"mtime":1675427011230,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n5p3ua",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/media/mobcoder/HDD 1TB1/vashuddha/src/index.js",[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/App.js",[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/reportWebVitals.js",[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js",["23","24","25","26","27"],[],"import React, { useEffect, useState } from \"react\";\nimport vishuddha from '../images/ai-bot.png'\nimport user from '../images/user.png'\nfunction Chat() {\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\",\n  });\n  const [gptMessage,setGptMessage]=useState([])\n  useEffect(()=>{\nif(gptMessage.length>0){\n  gptMessage.map(item=>{\n\n    setChatMessage([...chatMessage,item])\n    setGptMessage([])\n  })\n}\n  },[gptMessage])\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    setChatMessage([...chatMessage, { user: \"self\", message: form.message }]);\n    setForm({ ...form, message: \"\" });\n    const response =  await fetch('https://backend-h427.onrender.com/',{\n      method:'POST',\n      headers:{\n        \"Content-Type\":'application/json'\n      },\n      body:JSON.stringify({\n        message:form.message\n      })\n    })\n    const data =await response.json();\n    setGptMessage([...gptMessage, { user: \"Chat GPT\", message: data.message }]);\n    \n    console.log(data.message)\n  };\n  return (\n    <form className=\"chat-main\" onSubmit={handleSubmit}>\n      {console.log(chatMessage)}\n      {chatMessage.map((item, i) => {\n        return (\n          <div className=\"chat-text-field\">\n            <span>{item.user=='self'?<img src={user}/>:<img src={vishuddha} className='vishuddha-img'/>}</span><span className=\"message\">{item.message}</span>\n          </div>\n        );\n      })}\n      <footer className=\"footer\">\n        <input\n          type={\"text\"}\n          onChange={handleChange}\n          name=\"message\"\n          value={form.message}\n          placeholder=\"Type here anything you want to ask with Ai Vashuddha\"\n        />\n      </footer>\n    </form>\n  );\n}\n\nexport default Chat;\n",{"ruleId":"28","severity":1,"message":"29","line":12,"column":22,"nodeType":"30","messageId":"31","endLine":12,"endColumn":24},{"ruleId":"32","severity":1,"message":"33","line":18,"column":5,"nodeType":"34","endLine":18,"endColumn":17,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":46,"column":29,"nodeType":"38","messageId":"39","endLine":46,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":46,"column":38,"nodeType":"42","endLine":46,"endColumn":55},{"ruleId":"40","severity":1,"message":"41","line":46,"column":56,"nodeType":"42","endLine":46,"endColumn":104},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chatMessage'. Either include it or remove the dependency array. You can also do a functional update 'setChatMessage(c => ...)' if you only need 'chatMessage' in the 'setChatMessage' call.","ArrayExpression",["43"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"44","fix":"45"},"Update the dependencies array to be: [chatMessage, gptMessage]",{"range":"46","text":"47"},[459,471],"[chatMessage, gptMessage]"]