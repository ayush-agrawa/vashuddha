[{"/media/mobcoder/HDD 1TB1/vashuddha/src/index.js":"1","/media/mobcoder/HDD 1TB1/vashuddha/src/App.js":"2","/media/mobcoder/HDD 1TB1/vashuddha/src/reportWebVitals.js":"3","/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js":"4","/media/mobcoder/HDD 1TB1/vashuddha/src/component/Modal.js":"5"},{"size":535,"mtime":1673432974524,"results":"6","hashOfConfig":"7"},{"size":277,"mtime":1675429112637,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1673432974524,"results":"9","hashOfConfig":"7"},{"size":2680,"mtime":1675681263798,"results":"10","hashOfConfig":"7"},{"size":2197,"mtime":1675682377017,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1n5p3ua",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/mobcoder/HDD 1TB1/vashuddha/src/index.js",[],[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/App.js",[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/reportWebVitals.js",[],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js",["28","29","30","31","32","33"],[],"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Modal.js",["34","35","36","37","38"],[],{"ruleId":"39","severity":1,"message":"40","line":16,"column":29,"nodeType":"41","messageId":"42","endLine":16,"endColumn":31},{"ruleId":"43","severity":1,"message":"44","line":21,"column":6,"nodeType":"45","endLine":21,"endColumn":18,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":55,"column":9,"nodeType":"49","endLine":60,"endColumn":11},{"ruleId":"50","severity":1,"message":"51","line":67,"column":28,"nodeType":"52","messageId":"53","endLine":67,"endColumn":30},{"ruleId":"47","severity":1,"message":"48","line":68,"column":19,"nodeType":"49","endLine":68,"endColumn":37},{"ruleId":"47","severity":1,"message":"48","line":70,"column":19,"nodeType":"49","endLine":70,"endColumn":68},{"ruleId":"54","severity":1,"message":"55","line":14,"column":5,"nodeType":"56","messageId":"57","endLine":14,"endColumn":22},{"ruleId":"43","severity":1,"message":"58","line":30,"column":6,"nodeType":"45","endLine":30,"endColumn":28,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"51","line":62,"column":50,"nodeType":"52","messageId":"53","endLine":62,"endColumn":52},{"ruleId":"47","severity":1,"message":"48","line":67,"column":32,"nodeType":"49","endLine":67,"endColumn":66},{"ruleId":"47","severity":1,"message":"48","line":67,"column":91,"nodeType":"49","endLine":67,"endColumn":181},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chatMessage'. Either include it or remove the dependency array. You can also do a functional update 'setChatMessage(c => ...)' if you only need 'chatMessage' in the 'setChatMessage' call.","ArrayExpression",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'interimTranscript' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'finalTranscript', 'props', and 'resetTranscript'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["61"],{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [chatMessage, gptMessage]",{"range":"66","text":"67"},"Update the dependencies array to be: [transcript, listening, finalTranscript, props, resetTranscript]",{"range":"68","text":"69"},[623,635],"[chatMessage, gptMessage]",[824,846],"[transcript, listening, finalTranscript, props, resetTranscript]"]