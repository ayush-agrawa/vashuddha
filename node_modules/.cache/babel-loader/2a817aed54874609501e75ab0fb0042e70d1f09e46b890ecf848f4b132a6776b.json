{"ast":null,"code":"var _jsxFileName = \"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport vishuddha from '../images/ai-bot.png';\nimport user from '../images/user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\"\n  });\n  const [gptMessage, setGptMessage] = useState([]);\n  useEffect(() => {\n    if (gptMessage.length > 0) {\n      gptMessage.map(item => {\n        setChatMessage([...chatMessage, item]);\n        setGptMessage([]);\n      });\n    }\n  }, [gptMessage]);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    if (form.message !== '') {\n      e.preventDefault();\n      setChatMessage([...chatMessage, {\n        user: \"self\",\n        message: form.message\n      }]);\n      setForm({\n        ...form,\n        message: \"\"\n      });\n      const response = await fetch('https://backend-h427.onrender.com/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          message: form.message\n        })\n      });\n      const data = await response.json();\n      setGptMessage([...gptMessage, {\n        user: \"Chat GPT\",\n        message: data.message\n      }]);\n      console.log(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"chat-main\",\n    onSubmit: handleSubmit,\n    children: [chatMessage.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.user == 'self' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: vishuddha,\n            className: \"vishuddha-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message\",\n          children: item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 112\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Microphone: \", listening ? 'on' : 'off']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.startListening,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.stopListening,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        name: \"message\",\n        value: form.message,\n        placeholder: \"Type here anything you want to ask with Ai Vashuddha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"8zufA1qoz5IVdi86tMpQr6Km0rA=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","SpeechRecognition","useSpeechRecognition","vishuddha","user","Chat","chatMessage","setChatMessage","form","setForm","message","gptMessage","setGptMessage","length","map","item","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","i","startListening","stopListening"],"sources":["/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport vishuddha from '../images/ai-bot.png'\nimport user from '../images/user.png'\nfunction Chat() {\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\",\n  });\n  const [gptMessage,setGptMessage]=useState([])\n  useEffect(()=>{\nif(gptMessage.length>0){\n  gptMessage.map(item=>{\n\n    setChatMessage([...chatMessage,item])\n    setGptMessage([])\n  })\n}\n  },[gptMessage])\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n  const handleChange = (e) => {\n   \n\n      setForm({ ...form, [e.target.name]: e.target.value });\n    \n  };\n  const handleSubmit = async(e) => {\n    if(form.message!==''){\n    e.preventDefault();\n    setChatMessage([...chatMessage, { user: \"self\", message: form.message }]);\n    setForm({ ...form, message: \"\" });\n    const response =  await fetch('https://backend-h427.onrender.com/',{\n      method:'POST',\n      headers:{\n        \"Content-Type\":'application/json'\n      },\n      body:JSON.stringify({\n        message:form.message\n      })\n    })\n    const data =await response.json();\n    setGptMessage([...gptMessage, { user: \"Chat GPT\", message: data.message }]);\n    console.log(data.message)\n  }\n  };\n  return (\n    <form className=\"chat-main\" onSubmit={handleSubmit}>\n      {chatMessage.map((item, i) => {\n        return (\n          <div className=\"chat-text-field\">\n            <span>{item.user=='self'?<img src={user}/>:<img src={vishuddha} className='vishuddha-img'/>}</span><span className=\"message\">{item.message}</span>\n          </div>\n        );\n      })}\n      <div>\n      <p>Microphone: {listening ? 'on' : 'off'}</p>\n      <button onClick={SpeechRecognition.startListening}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n      <footer className=\"footer\">\n        <input\n          type={\"text\"}\n          onChange={handleChange}\n          name=\"message\"\n          value={form.message}\n          placeholder=\"Type here anything you want to ask with Ai Vashuddha\"\n        />\n      </footer>\n    </form>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}