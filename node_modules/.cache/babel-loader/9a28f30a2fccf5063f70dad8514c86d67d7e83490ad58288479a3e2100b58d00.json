{"ast":null,"code":"var _jsxFileName = \"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport vishuddha from '../images/ai-bot.png';\nimport user from '../images/user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\"\n  });\n  const [gptMessage, setGptMessage] = useState([]);\n  useEffect(() => {\n    if (gptMessage.length > 0) {\n      gptMessage.map(item => {\n        setChatMessage([...chatMessage, item]);\n        setGptMessage([]);\n      });\n    }\n  }, [gptMessage]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setChatMessage([...chatMessage, {\n      user: \"self\",\n      message: form.message\n    }]);\n    setForm({\n      ...form,\n      message: \"\"\n    });\n    const response = await fetch('https://backend-h427.onrender.com/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        message: form.message\n      })\n    });\n    const data = await response.json();\n    setGptMessage([...gptMessage, {\n      user: \"Chat GPT\",\n      message: data.message\n    }]);\n    console.log(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"chat-main\",\n    onSubmit: handleSubmit,\n    children: [console.log(chatMessage), chatMessage.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.user == 'self' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: vishuddha,\n            className: \"vishuddha-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message\",\n          children: item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 112\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        name: \"message\",\n        value: form.message,\n        placeholder: \"Type here anything you want to ask with Ai Vashuddha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"uM6IE67tzPobqQ5nzp0/6ibEd7M=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","vishuddha","user","Chat","chatMessage","setChatMessage","form","setForm","message","gptMessage","setGptMessage","length","map","item","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","i"],"sources":["/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport vishuddha from '../images/ai-bot.png'\nimport user from '../images/user.png'\nfunction Chat() {\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\",\n  });\n  \n  const [gptMessage,setGptMessage]=useState([])\n  useEffect(()=>{\nif(gptMessage.length>0){\n  gptMessage.map(item=>{\n\n    setChatMessage([...chatMessage,item])\n    setGptMessage([])\n  })\n}\n  },[gptMessage])\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    setChatMessage([...chatMessage, { user: \"self\", message: form.message }]);\n    setForm({ ...form, message: \"\" });\n    const response =  await fetch('https://backend-h427.onrender.com/',{\n      method:'POST',\n      headers:{\n        \"Content-Type\":'application/json'\n      },\n      body:JSON.stringify({\n        message:form.message\n      })\n    })\n    const data =await response.json();\n    setGptMessage([...gptMessage, { user: \"Chat GPT\", message: data.message }]);\n    \n    console.log(data.message)\n  };\n  return (\n    <form className=\"chat-main\" onSubmit={handleSubmit}>\n      {console.log(chatMessage)}\n      {chatMessage.map((item, i) => {\n        return (\n          <div className=\"chat-text-field\">\n            <span>{item.user=='self'?<img src={user}/>:<img src={vishuddha} className='vishuddha-img'/>}</span><span className=\"message\">{item.message}</span>\n          </div>\n        );\n      })}\n      <footer className=\"footer\">\n        <input\n          type={\"text\"}\n          onChange={handleChange}\n          name=\"message\"\n          value={form.message}\n          placeholder=\"Type here anything you want to ask with Ai Vashuddha\"\n        />\n      </footer>\n    </form>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}