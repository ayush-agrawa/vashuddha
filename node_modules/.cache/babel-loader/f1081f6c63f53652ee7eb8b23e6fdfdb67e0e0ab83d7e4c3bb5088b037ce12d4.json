{"ast":null,"code":"var _jsxFileName = \"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport vishuddha from '../images/ai-bot.png';\nimport user from '../images/user.png';\nimport openmic from '../images/openmic.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\"\n  });\n  const [gptMessage, setGptMessage] = useState([]);\n  useEffect(() => {\n    if (gptMessage.length > 0) {\n      gptMessage.map(item => {\n        setChatMessage([...chatMessage, item]);\n        setGptMessage([]);\n      });\n    }\n  }, [gptMessage]);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    interimTranscript,\n    finalTranscript\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    if (form.message !== '') {\n      e.preventDefault();\n      setChatMessage([...chatMessage, {\n        user: \"self\",\n        message: form.message\n      }]);\n      setForm({\n        ...form,\n        message: \"\"\n      });\n      const response = await fetch('https://backend-h427.onrender.com/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          message: form.message\n        })\n      });\n      const data = await response.json();\n      setGptMessage([...gptMessage, {\n        user: \"Chat GPT\",\n        message: data.message\n      }]);\n      console.log(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Microphone: \", listening ? 'on' : 'off']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this), console.log(listening, 'ndoiwndewidwe', finalTranscript), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: openmic,\n      onClick: SpeechRecognition.startListening,\n      width: \"30\",\n      className: \"cursor-pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-main\",\n      onSubmit: handleSubmit,\n      children: [chatMessage.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-text-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.user == 'self' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: vishuddha,\n              className: \"vishuddha-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message\",\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 112\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          name: \"message\",\n          value: form.message,\n          placeholder: \"Type here anything you want to ask with Ai Vashuddha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"EDOQf5lRBvK0iNUaCV0HBqCWfng=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","SpeechRecognition","useSpeechRecognition","vishuddha","user","openmic","Chat","chatMessage","setChatMessage","form","setForm","message","gptMessage","setGptMessage","length","map","item","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","interimTranscript","finalTranscript","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","startListening","stopListening","i"],"sources":["/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport vishuddha from '../images/ai-bot.png'\nimport user from '../images/user.png'\nimport openmic from '../images/openmic.svg'\nfunction Chat() {\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\",\n  });\n  const [gptMessage,setGptMessage]=useState([])\n  useEffect(()=>{\nif(gptMessage.length>0){\n  gptMessage.map(item=>{\n\n    setChatMessage([...chatMessage,item])\n    setGptMessage([])\n  })\n}\n  },[gptMessage])\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    interimTranscript,\n    finalTranscript\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n  const handleChange = (e) => {\n   \n\n      setForm({ ...form, [e.target.name]: e.target.value });\n    \n  };\n  const handleSubmit = async(e) => {\n    if(form.message!==''){\n    e.preventDefault();\n    setChatMessage([...chatMessage, { user: \"self\", message: form.message }]);\n    setForm({ ...form, message: \"\" });\n    const response =  await fetch('https://backend-h427.onrender.com/',{\n      method:'POST',\n      headers:{\n        \"Content-Type\":'application/json'\n      },\n      body:JSON.stringify({\n        message:form.message\n      })\n    })\n    const data =await response.json();\n    setGptMessage([...gptMessage, { user: \"Chat GPT\", message: data.message }]);\n    console.log(data.message)\n  }\n  };\n  return (<>\n  <p>Microphone: {listening ? 'on' : 'off'}</p>\n{console.log(listening,'ndoiwndewidwe',finalTranscript)}\n      <img src={openmic} onClick={SpeechRecognition.startListening} width='30' className=\"cursor-pointer\"/>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    <form className=\"chat-main\" onSubmit={handleSubmit}>\n      {chatMessage.map((item, i) => {\n        return (\n          <div className=\"chat-text-field\">\n            <span>{item.user=='self'?<img src={user}/>:<img src={vishuddha} className='vishuddha-img'/>}</span><span className=\"message\">{item.message}</span>\n          </div>\n        );\n      })}\n      <div>\n      \n    </div>\n      <footer className=\"footer\">\n        <input\n          type={\"text\"}\n          onChange={handleChange}\n          name=\"message\"\n          value={form.message}\n          placeholder=\"Type here anything you want to ask with Ai Vashuddha\"\n          />\n      </footer>\n    </form>\n          </>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}