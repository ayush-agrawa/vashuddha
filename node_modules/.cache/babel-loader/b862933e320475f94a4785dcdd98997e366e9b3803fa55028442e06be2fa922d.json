{"ast":null,"code":"var _jsxFileName = \"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Modal.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport openmic from '../images/openmic.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal(props) {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    interimTranscript,\n    finalTranscript\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  us;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"myModal\",\n    className: `${props.open ? \"modal-open\" : \"modal-close\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.isClose(),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: openmic,\n          onClick: SpeechRecognition.startListening,\n          width: \"30\",\n          className: \"cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SpeechRecognition.stopListening,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTranscript,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"uVQH4FDXchzr2J7HK7ppJt1w6/I=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","openmic","Modal","props","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","interimTranscript","finalTranscript","us","open","isClose","startListening","stopListening"],"sources":["/media/mobcoder/HDD 1TB1/vashuddha/src/component/Modal.js"],"sourcesContent":["import React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport openmic from '../images/openmic.svg'\nfunction Modal(props) {\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    interimTranscript,\n    finalTranscript,\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n  us\n  return (\n    <div id=\"myModal\" className={`${props.open ? \"modal-open\" : \"modal-close\"}`}>\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={() => props.isClose()}>\n          &times;\n        </span>\n        <div>\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\n          <img\n            src={openmic}\n            onClick={SpeechRecognition.startListening}\n            width=\"30\"\n            className=\"cursor-pointer\"\n          />\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\n          <button onClick={resetTranscript}>Reset</button>\n          <p>{transcript}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,OAAOC,OAAO,MAAM,uBAAuB;AAAA;AAC3C,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EACpB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC,gCAAgC;IAChCC,iBAAiB;IACjBC;EACF,CAAC,GAAGT,oBAAoB,EAAE;EAC1B,IAAI,CAACO,gCAAgC,EAAE;IACrC,oBAAO;MAAA,UAAM;IAA2C;MAAA;MAAA;MAAA;IAAA,QAAO;EACjE;EACAG,EAAE;EACF,oBACE;IAAK,EAAE,EAAC,SAAS;IAAC,SAAS,EAAG,GAAEP,KAAK,CAACQ,IAAI,GAAG,YAAY,GAAG,aAAc,EAAE;IAAA,uBAC1E;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAM,SAAS,EAAC,OAAO;QAAC,OAAO,EAAE,MAAMR,KAAK,CAACS,OAAO,EAAG;QAAA,UAAC;MAExD;QAAA;QAAA;QAAA;MAAA,QAAO,eACP;QAAA,wBACE;UAAA,WAAG,cAAY,EAACP,SAAS,GAAG,IAAI,GAAG,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC7C;UACE,GAAG,EAAEJ,OAAQ;UACb,OAAO,EAAEF,iBAAiB,CAACc,cAAe;UAC1C,KAAK,EAAC,IAAI;UACV,SAAS,EAAC;QAAgB;UAAA;UAAA;UAAA;QAAA,QAC1B,eACF;UAAQ,OAAO,EAAEd,iBAAiB,CAACe,aAAc;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/D;UAAQ,OAAO,EAAER,eAAgB;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS,eAChD;UAAA,UAAIF;QAAU;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAlCQF,KAAK;EAAA,QAQRF,oBAAoB;AAAA;AAAA,KARjBE,KAAK;AAoCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}