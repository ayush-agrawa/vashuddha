{"ast":null,"code":"var _jsxFileName = \"/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport vishuddha from \"../images/ai-bot.png\";\nimport user from \"../images/user.png\";\nimport openmic from \"../images/openmic.svg\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const [gptMessage, setGptMessage] = useState([]);\n  useEffect(() => {\n    if (gptMessage.length > 0) {\n      gptMessage.map(item => {\n        setChatMessage([...chatMessage, item]);\n        setGptMessage([]);\n      });\n    }\n  }, [gptMessage]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleChangepeak = value => {\n    console.log(value);\n    setForm({\n      ...form,\n      message: value\n    });\n  };\n  const handleSubmit = async e => {\n    if (form.message !== \"\") {\n      e === null || e === void 0 ? void 0 : e.preventDefault();\n      setChatMessage([...chatMessage, {\n        user: \"self\",\n        message: form.message\n      }]);\n      setForm({\n        ...form,\n        message: \"\"\n      });\n      const response = await fetch(\"http:localhost:\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: form.message\n        })\n      });\n      const data = await response.json();\n      setGptMessage([...gptMessage, {\n        user: \"Chat GPT\",\n        message: data.message\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${!modal && \"mic\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: openmic,\n        onClick: () => setModal(true),\n        width: \"30\",\n        className: \"cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-main\",\n      onSubmit: handleSubmit,\n      children: [chatMessage.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-text-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.user == \"self\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: vishuddha,\n              className: \"vishuddha-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message\",\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      }), console.log(form), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          name: \"message\",\n          value: form.message,\n          placeholder: \"Type here anything you want to ask with Ai Vashuddha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modal,\n      isClose: () => setModal(false),\n      handleChange: handleChangepeak,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"ExRpLB7Z6juXEcUWbWAUPXXoDDs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","vishuddha","user","openmic","Modal","Chat","chatMessage","setChatMessage","form","setForm","message","modal","setModal","gptMessage","setGptMessage","length","map","item","handleChange","e","target","name","value","handleChangepeak","console","log","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","i"],"sources":["/media/mobcoder/HDD 1TB1/vashuddha/src/component/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport vishuddha from \"../images/ai-bot.png\";\nimport user from \"../images/user.png\";\nimport openmic from \"../images/openmic.svg\";\nimport Modal from \"./Modal\";\nfunction Chat() {\n  const [chatMessage, setChatMessage] = useState([]);\n  const [form, setForm] = useState({\n    message: \"\",\n  });\n  const [modal, setModal] = useState(false);\n  const [gptMessage, setGptMessage] = useState([]);\n\n  useEffect(() => {\n    if (gptMessage.length > 0) {\n      gptMessage.map((item) => {\n        setChatMessage([...chatMessage, item]);\n        setGptMessage([]);\n      });\n    }\n  }, [gptMessage]);\n\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n  const handleChangepeak = (value) => {\n    console.log(value)\n    setForm({ ...form, message: value });\n  };\n  const handleSubmit = async (e) => {\n    if (form.message !== \"\") {\n      e?.preventDefault();\n      setChatMessage([...chatMessage, { user: \"self\", message: form.message }]);\n      setForm({ ...form, message: \"\" });\n      const response = await fetch(\"http:localhost:\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: form.message,\n        }),\n      });\n      const data = await response.json();\n      setGptMessage([\n        ...gptMessage,\n        { user: \"Chat GPT\", message: data.message },\n      ]);\n    }\n  };\n  return (\n    <>\n      <div className={`${!modal && \"mic\"}`}>\n        <img\n          src={openmic}\n          onClick={() => setModal(true)}\n          width=\"30\"\n          className=\"cursor-pointer\"\n        />\n      </div>\n      <form className=\"chat-main\" onSubmit={handleSubmit}>\n        {chatMessage.map((item, i) => {\n          return (\n            <div className=\"chat-text-field\">\n              <span>\n                {item.user == \"self\" ? (\n                  <img src={user} />\n                ) : (\n                  <img src={vishuddha} className=\"vishuddha-img\" />\n                )}\n              </span>\n              <span className=\"message\">{item.message}</span>\n            </div>\n          );\n        })}\n        {console.log(form)}\n        <footer className=\"footer\">\n          <input\n            type={\"text\"}\n            onChange={handleChange}\n            name=\"message\"\n            value={form.message}\n            placeholder=\"Type here anything you want to ask with Ai Vashuddha\"\n          />\n        </footer>\n      </form>\n      <Modal open={modal} isClose={() => setModal(false)} handleChange={handleChangepeak} handleSubmit={handleSubmit}/>\n    </>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}